#!/usr/bin/env ruby

lib = File.expand_path('../lib', __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

require "bundler/setup"

def parse_args
  require 'optimist'
  opts = Optimist.options do
    opt :faktory_url, "URL of the faktory server", :type => :string,
        :default => ENV["FAKTORY_URL"] || "tcp://localhost:7419"
    opt :sources_api, "URL of the sources service api",        :type => :string, :default => ENV["SOURCES_API"] || "http://localhost:3000/api/v0.1"
  end

  opts
end

args = parse_args

require "topological_inventory/core/ar_helper"
TopologicalInventory::Core::ArHelper.database_yaml_path = Pathname.new(__dir__).join("../config/database.yml")
TopologicalInventory::Core::ArHelper.load_environment!

require "sources-api-client"
sources_api_uri = URI(args[:sources_api])

SourcesApiClient.configure do |config|
  config.scheme    = sources_api_uri.scheme || "http"
  config.host      = "#{sources_api_uri.host}:#{sources_api_uri.port}"
  config.base_path = sources_api_uri.path if sources_api_uri.path.present?
  config.logger    = TopologicalInventory::Core.logger
end

require "topological_inventory/sources_sync"
sources_sync = TopologicalInventory::SourcesSync.new(args[:faktory_url])
sources_sync.run
